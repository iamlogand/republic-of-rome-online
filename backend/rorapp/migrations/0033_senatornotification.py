# Generated by Django 4.2.2 on 2023-09-24 09:24

from django.db import migrations, models
import django.db.models.deletion


# Create relationships between senators and notifications
def create_senator_notifications(apps, schema_editor):
    Notification = apps.get_model('rorapp', 'Notification')
    Senator = apps.get_model('rorapp', 'Senator')
    SenatorNotification = apps.get_model('rorapp', 'SenatorNotification')
    
    notifications = Notification.objects.all()
    
    # For each notification create some relations
    for notification in notifications:
        
        # Look at notification data and create a list of keys that end in "senator"
        senator_keys = [key for key in notification.data.keys() if key.endswith('senator')]
        
        for senator_key in senator_keys:
            
            # Create a SenatorNotification for each senator ID in the notification data
            senator_id = notification.data[senator_key]
            
            if senator_id:
                senator = Senator.objects.get(id=senator_id)
                SenatorNotification.objects.create(senator=senator, notification=notification)


class Migration(migrations.Migration):

    dependencies = [
        ('rorapp', '0032_change_senator_notification_data'),
    ]

    operations = [
        migrations.CreateModel(
            name='SenatorNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rorapp.notification')),
                ('senator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rorapp.senator')),
            ],
        ),
        migrations.RunPython(create_senator_notifications, migrations.RunPython.noop),
    ]
